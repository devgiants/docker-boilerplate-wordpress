<?php
namespace Deployer;

require 'recipe/wordpress.php';

// Project name
set('application', '${PROJECT_NAME}');

set('repository', 'git@github.com:${GITHUB_NAME}/${PROJECT_REPO}');

set('git_tty', true);

set('shared_files', ['wp-config.php', '.htaccess', '.htpasswd']);
set('shared_dirs', ['wp-content/uploads', 'logs']);
add('writable_dirs', []);

// Hosts

host('prod')
    ->set('branch', 'main')
    ->set('hostname', 'hostname or ssh name')
    ->set('deploy_path', '/var/www/yourproject');

// Hooks

after('deploy:failed', 'deploy:unlock');

task('deploy:writable')->disable();

desc('Remove all uneeded files');
task('remove', function () {
    run("rm -rf {{release_path}}/docker {{release_path}}/.env {{release_path}}/.git* {{release_path}}/olddeploy.php {{release_path}}/docker-compose.yml {{release_path}}/Makefile {{release_path}}/wp-cli.yml*");
});
after('deploy:cleanup', 'remove');


//desc('Composer install');
//task('deploy:composer_install', function () {
//	run("cd '{{release_path}}'; composer install");
//});
//before('deploy:symlink', 'deploy:composer_install');

// If ACF with automatic fields sync
//desc('Update ACF fields from files');
//task('deploy:acf_update', function () {
//	run("cd '{{release_path}}'; wp acf clean --database; wp acf import --all");
//});
//after('deploy:symlink', 'acf_update');